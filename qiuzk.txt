#include <iostream>
#include <vector>
#include <string>
using namespace std;

// Function to swap two elements
void swap(pair<string, int>& a, pair<string, int>& b) {
    pair<string, int> temp = a;
    a = b;
    b = temp;
}

// Partition function for quick sort
int partition(vector<pair<string, int>>& arr, int low, int high) {
    int pivot = arr[high].second; // pivot is the credit value
    int i = low - 1; // index of smaller element

    // Traverse through the array
    for (int j = low; j < high; j++) {
        if (arr[j].second >= pivot) { // If current credit is greater than or equal to pivot
            i++;
            swap(arr[i], arr[j]); // Swap
        }
    }
    swap(arr[i + 1], arr[high]); // Move pivot to the correct position
    return i + 1;
}

// Quick Sort function
void quickSort(vector<pair<string, int>>& arr, int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high); // pi is the partition index

        // Recursively sort the two subarrays
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

int main() {
    // List of students' names and their credits
    vector<pair<string, int>> students = {
        {"John", 120},
        {"Alice", 150},
        {"Bob", 80},
        {"David", 200},
        {"Eve", 90},
        {"Charlie", 130}
    };

    // Number of students
    int n = students.size();

    // Sort the students based on their credits using Quick Sort
    quickSort(students, 0, n - 1);

    // Display the names of the top 3 students
    cout << "Top 3 Students with the Highest Credits:" << endl;
    for (int i = 0; i < 3 && i < n; i++) {
        cout << students[i].first << " - " << students[i].second << " credits" << endl;
    }

    return 0;
}